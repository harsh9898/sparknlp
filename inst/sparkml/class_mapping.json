{
  "com.johnsnowlabs.nlp.Chunk2Doc": "nlp_chunk2doc",
  "com.johnsnowlabs.nlp.Doc2Chunk": "nlp_doc2chunk",
  "com.johnsnowlabs.nlp.DocumentAssembler": "nlp_document_assembler",
  "com.johnsnowlabs.nlp.EmbeddingsFinisher": "nlp_embeddings_finisher",
  "com.johnsnowlabs.nlp.Finisher": "nlp_finisher",
  "com.johnsnowlabs.nlp.LightPipeline": "nlp_light_pipeline",
  "com.johnsnowlabs.nlp.TokenAssembler": "nlp_token_assembler",
  "com.johnsnowlabs.nlp.annotators.Chunker": "nlp_chunker",
  "com.johnsnowlabs.nlp.annotators.DateMatcher": "nlp_date_matcher",
  "com.johnsnowlabs.nlp.annotators.DeepSentenceDetector": "nlp_deep_sentence_detector",
  "com.johnsnowlabs.nlp.annotators.Lemmatizer": "nlp_lemmatizer",
  "com.johnsnowlabs.nlp.annotators.LemmatizerModel": "nlp_lemmatizer_model",
  "com.johnsnowlabs.nlp.annotators.NGramGenerator": "nlp_ngram_generator",
  "com.johnsnowlabs.nlp.annotators.Normalizer": "nlp_normalizer",
  "com.johnsnowlabs.nlp.annotators.NormalizerModel": "nlp_normalizer_model",
  "com.johnsnowlabs.nlp.annotators.RecursiveTokenizer": "nlp_recursive_tokenizer",
  "com.johnsnowlabs.nlp.annotators.RecursiveTokenizerModel": "nlp_recursive_tokenizer_model",
  "com.johnsnowlabs.nlp.annotators.RegexMatcher": "nlp_regex_matcher",
  "com.johnsnowlabs.nlp.annotators.RegexMatcherModel": "nlp_regex_matcher_model",
  "com.johnsnowlabs.nlp.annotators.Stemmer": "nlp_stemmer",
  "com.johnsnowlabs.nlp.annotators.StopWordsCleaner": "nlp_stop_words_cleaner",
  "com.johnsnowlabs.nlp.annotators.TextMatcher": "nlp_text_matcher",
  "com.johnsnowlabs.nlp.annotators.TextMatcherModel": "nlp_text_matcher_model",
  "com.johnsnowlabs.nlp.annotators.Tokenizer": "nlp_tokenizer",
  "com.johnsnowlabs.nlp.annotators.TokenizerModel": "nlp_tokenizer_model",
  "com.johnsnowlabs.nlp.annotators.classifier.dl.ClassifierDLApproach": "nlp_classifier_dl",
  "com.johnsnowlabs.nlp.annotators.classifier.dl.ClassifierDLModel": "nlp_classifier_dl",
  "com.johnsnowlabs.nlp.annotators.classifier.dl.MultiClassifierDLApproach": "nlp_multi_classifier_dl",
  "com.johnsnowlabs.nlp.annotators.classifier.dl.MultiClassifierDLModel": "nlp_multi_classifier_dl_model",
  "com.johnsnowlabs.nlp.annotators.classifier.dl.SentimentDLApproach": "nlp_sentiment_dl",
  "com.johnsnowlabs.nlp.annotators.classifier.dl.SentimentDLModel": "nlp_sentiment_dl_model",
  "com.johnsnowlabs.nlp.annotators.keyword.yake.YakeModel": "nlp_yake_model",
  "com.johnsnowlabs.nlp.annotators.ld.dl.LanguageDetectorDL": "nlp_language_detector_dl",
  "com.johnsnowlabs.nlp.annotators.ner.crf.NerCrfApproach": "nlp_ner_crf",
  "com.johnsnowlabs.nlp.annotators.ner.crf.NerCrfModel": "nlp_ner_crf_model",
  "com.johnsnowlabs.nlp.annotators.ner.dl.NerDLApproach": "nlp_ner_dl",
  "com.johnsnowlabs.nlp.annotators.ner.dl.NerDLModel": "nlp_ner_dl_model",
  "com.johnsnowlabs.nlp.annotators.parser.dep.DependencyParserApproach": "nlp_dependency_parser",
  "com.johnsnowlabs.nlp.annotators.parser.dep.DependencyParserModel": "nlp_dependency_parser_model",
  "com.johnsnowlabs.nlp.annotators.parser.typdep.TypedDependencyParserApproach": "nlp_typed_dependency_parser",
  "com.johnsnowlabs.nlp.annotators.parser.typdep.TypedDependencyParserModel": "nlp_typed_dependency_parser_model",
  "com.johnsnowlabs.nlp.annotators.pos.perceptron.PerceptronApproach": "nlp_perceptron",
  "com.johnsnowlabs.nlp.annotators.pos.perceptron.PerceptronModel": "nlp_perceptron_model",  
  "com.johnsnowlabs.nlp.annotators.sbd.pragmatic.SentenceDetector": "nlp_sentence_detector",
  "com.johnsnowlabs.nlp.annotators.sda.pragmatic.SentimentDetector": "nlp_sentiment_detector",
  "com.johnsnowlabs.nlp.annotators.sda.vivekn.ViveknSentimentApproach": "nlp_vivekn_sentiment_detector",
  "com.johnsnowlabs.nlp.annotators.sda.vivekn.ViveknSentimentModel": "nlp_vivekn_sentiment_detector_model",
  "com.johnsnowlabs.nlp.annotators.spell.context.ContextSpellCheckerApproach": "nlp_context_spell_checker",
  "com.johnsnowlabs.nlp.annotators.spell.context.ContextSpellCheckerModel": "nlp_context_spell_checker_model",
  "com.johnsnowlabs.nlp.annotators.spell.norvig.NorvigSweetingApproach": "nlp_norvig_spell_checker",
  "com.johnsnowlabs.nlp.annotators.spell.norvig.NorvigSweetingModel": "nlp_norvig_spell_checker_model",
  "com.johnsnowlabs.nlp.annotators.spell.symmetric.SymmetricDeleteApproach": "nlp_symmetric_delete",
  "com.johnsnowlabs.nlp.annotators.spell.symmetric.SymmetricDeleteModel": "nlp_symmetric_delete_model",
  "com.johnsnowlabs.nlp.embeddings.AlbertEmbeddings": "nlp_albert_embeddings",
  "com.johnsnowlabs.nlp.embeddings.BertEmbeddings": "nlp_bert_embeddings",
  "com.johnsnowlabs.nlp.embeddings.BertSentenceEmbeddings": "nlp_bert_sentence_embeddings",
  "com.johnsnowlabs.nlp.embeddings.ChunkEmbeddings": "nlp_chunk_embeddings",
  "com.johnsnowlabs.nlp.embeddings.ElmoEmbeddings": "nlp_elmo_embeddings",
  "com.johnsnowlabs.nlp.embeddings.SentenceEmbeddings": "nlp_sentence_embeddings",
  "com.johnsnowlabs.nlp.embeddings.UniversalSentenceEncoder": "nlp_univ_sent_encoder",
  "com.johnsnowlabs.nlp.embeddings.WordEmbeddings": "nlp_word_embeddings",
  "com.johnsnowlabs.nlp.embeddings.WordEmbeddingsModel": "nlp_word_embeddings_model",
  "com.johnsnowlabs.nlp.embeddings.XlnetEmbeddings": "nlp_xlnet_embeddings"
}