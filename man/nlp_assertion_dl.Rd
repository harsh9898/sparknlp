% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assertion_dl.R
\name{nlp_assertion_dl}
\alias{nlp_assertion_dl}
\title{Spark NLP AssertionDLApproach}
\usage{
nlp_assertion_dl(
  x,
  input_cols,
  output_col,
  graph_folder = NULL,
  config_proto_bytes = NULL,
  label_column = NULL,
  batch_size = NULL,
  epochs = NULL,
  learning_rate = NULL,
  dropout = NULL,
  max_sent_len = NULL,
  start_col = NULL,
  end_col = NULL,
  chunk_col = NULL,
  classes = NULL,
  enable_output_logs = NULL,
  output_logs_path = NULL,
  target_col = NULL,
  validation_split = NULL,
  verbose = NULL,
  uid = random_string("assertion_dl_")
)
}
\arguments{
\item{x}{A \code{spark_connection}, \code{ml_pipeline}, or a \code{tbl_spark}.}

\item{input_cols}{Input columns. String array.}

\item{output_col}{Output column. String.}

\item{graph_folder}{forlder containing the TF graph files}

\item{config_proto_bytes}{array of integers}

\item{label_column}{column name to use as the labels for training}

\item{batch_size}{gradient descent batch size}

\item{epochs}{number of training epochs}

\item{learning_rate}{learning rate for the algorithm}

\item{dropout}{dropout for the algorithm}

\item{max_sent_len}{regulates the length of the longest sentence}

\item{start_col}{the name of the column with the value for the start index of the target}

\item{end_col}{the name of the column with the value for the ending index of the target}

\item{chunk_col}{the name of the column containing the chunks}

\item{classes}{number of classes of assertion}

\item{enable_output_logs}{Whether to output to annotators log folder}

\item{output_logs_path}{path for the output logs to go}

\item{target_col}{the name of the column containing the target text}

\item{validation_split}{Choose the proportion of training dataset to be validated against the model on each Epoch.}

\item{verbose}{level of verbosity. One of All, PerStep, Epochs, TrainingStat, Silent}

\item{uid}{A character string used to uniquely identify the ML estimator.}
}
\value{
The object returned depends on the class of \code{x}.

\itemize{
\item \code{spark_connection}: When \code{x} is a \code{spark_connection}, the function returns an instance of a \code{ml_estimator} object. The object contains a pointer to
a Spark \code{Estimator} object and can be used to compose
\code{Pipeline} objects.

\item \code{ml_pipeline}: When \code{x} is a \code{ml_pipeline}, the function returns a \code{ml_pipeline} with
the NLP estimator appended to the pipeline.

\item \code{tbl_spark}: When \code{x} is a \code{tbl_spark}, an estimator is constructed then
immediately fit with the input \code{tbl_spark}, returning an NLP model.
}
}
\description{
Spark ML estimator that classifies each clinically relevant named entity into its assertion
type: “present”, “absent”, “hypothetical”, “conditional”, “associated_with_other_person”, etc.
See \url{https://nlp.johnsnowlabs.com/docs/en/licensed_annotators#assertiondl}
}
