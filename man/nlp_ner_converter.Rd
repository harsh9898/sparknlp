% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ner-converter.R
\name{nlp_ner_converter}
\alias{nlp_ner_converter}
\title{Spark NLP NerConverter}
\usage{
nlp_ner_converter(
  x,
  input_cols,
  output_col,
  white_list = NULL,
  preserve_position = NULL,
  lazy_annotator = NULL,
  uid = random_string("ner_converter_")
)
}
\arguments{
\item{x}{A \code{spark_connection}, \code{ml_pipeline}, or a \code{tbl_spark}.}

\item{input_cols}{Input columns. String array.}

\item{output_col}{Output column. String.}

\item{white_list}{If defined, list of entities to process. The rest will be ignored.
Do not include IOB prefix on labels"}

\item{preserve_position}{Whether to preserve the original position of the tokens
in the original document or use the modified tokens}

\item{lazy_annotator}{allows annotators to stand idle in the Pipeline and do nothing.
Can be called by other Annotators in a RecursivePipeline}

\item{uid}{A character string used to uniquely identify the ML transformer.}
}
\value{
The object returned depends on the class of \code{x}.

\itemize{
\item \code{spark_connection}: When \code{x} is a \code{spark_connection}, the function returns an instance of a \code{ml_transformer} object. The object contains a pointer to
a Spark \code{Transformer} object and can be used to compose
\code{Pipeline} objects.

\item \code{ml_pipeline}: When \code{x} is a \code{ml_pipeline}, the function returns a \code{ml_pipeline} with
the NLP transformer/annotator appended to the pipeline.

\item \code{tbl_spark}: When \code{x} is a \code{tbl_spark}, a transformer is constructed then
immediately fit with the input \code{tbl_spark}, returning the transformed data frame.
}

When \code{x} is a \code{spark_connection} the function returns a NerConverter transformer.
When \code{x} is a \code{ml_pipeline} the pipeline with the NerConverter added. When \code{x}
is a \code{tbl_spark} a transformed \code{tbl_spark}  (note that the Dataframe passed in must have the input_cols specified).
}
\description{
Spark ML transformer that converts IOB or IOB2 representation of NER to user-friendly.
}
